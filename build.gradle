import java.time.Duration

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo kafka and lib gatling for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation(
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.cloud:spring-cloud-starter-config',
			'org.springframework.cloud:spring-cloud-starter-bootstrap',
			"org.projectlombok:lombok:1.18.24"
	)

	testImplementation(
			'org.springframework.boot:spring-boot-starter-test',
			"org.junit.jupiter:junit-jupiter-api:5.12.2",
	)

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

componentTest {
	dependsOn startTestEnvironment
	finalizedBy stopTestEnvironment
	dependsOn(tasks.startTestEnvironment)
}


startTestEnvironment {
	dependsOn += ['composeUp']
}

stopTestEnvironment {
	dependsOn += ['composeUp']
}

dockerCompose {
	useComposeFiles = ['src/test/resources/docker/docker-compose.yml']
	dockerComposeStopTimeout = Duration.of(120)
	checkContainersRunning = false
	executable = "docker-compose"
	dockerExecutable = "docker"
	useDockerComposeV2 = true
}