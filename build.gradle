import java.time.Duration

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id "com.avast.gradle.docker-compose" version "0.17.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo kafka and lib gatling for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation(
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.cloud:spring-cloud-starter-config',
			'org.springframework.cloud:spring-cloud-starter-bootstrap',
			"org.springframework.boot:spring-boot-starter-actuator:3.5.3",

			"org.springframework.boot:spring-boot-starter-webflux:3.5.4",

			"org.projectlombok:lombok:1.18.24"
	)

	testImplementation(
			'org.springframework.boot:spring-boot-starter-test',
			"org.junit.jupiter:junit-jupiter-api:5.12.2",
	)

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

apply plugin: 'docker-compose'

tasks.named('test') {
	include "**/unit/**"
	useJUnitPlatform()

	testLogging {
		events 'passed', 'skipped', 'failed'
	}
}

tasks.register('startTestEnvironment') {
	dependsOn += ['composeUp']
}

tasks.register('stopTestEnvironment') {
	dependsOn += ['composeDown']
}

tasks.register('componentTest', Test.class) {
	include "**/component/**"
	description = "Run component test"
	dependsOn tasks.startTestEnvironment
	finalizedBy tasks.stopTestEnvironment
	useJUnitPlatform()
}


tasks.register('startApp', DefaultTask.class) {
	doFirst {
		'./gradlew bootRun'.execute()
	}
}

tasks.register('stopApp', DefaultTask.class) {
	doFirst {
		'./gradlew stop'.execute()
	}
}

tasks.register('blackboxTest', Test.class) {
	include "**/blackbox/**"
	description = "Run blackbox test"
	dependsOn tasks.startApp
	mustRunAfter tasks.componentTest

	finalizedBy tasks.stopApp
	useJUnitPlatform()
}

// config for plugin. Do not use tasks.register
dockerCompose {
	useComposeFiles = ['src/test/resources/docker/docker-compose.yml']
	dockerComposeStopTimeout = Duration.ofSeconds(120)
	checkContainersRunning = false
	executable = "docker-compose"
	dockerExecutable = "docker"
	projectName = "kafkapilot"
}