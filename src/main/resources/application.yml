spring:
  application:
    name: kafkapilot
  kafka:
    security:
      protocol: SSL
    ssl:
      key-store-location:
      key-store-password:
      key-store-key: jks
    properties:
      schema.registry.ssl.keystore.location: ${infrastructure.services.ssl.keyStorePath}
      schema.registry.ssl.keystore.password: ${infrastructure.services.ssl.keyStorePassword}
      schema.registry.ssl.key.password: ${infrastructure.services.ssl.keyStorePassword}
      max.poll.records: 500
      fetch.max.wait.ms: 500
    bootstrap-servers: localhost:9092
    producer:
      acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer


management:
  endpoints:
    web:
      exposure:
        include: health,info,env,metrics,certificates
  info:
    git:
      mode: full


app:
  applicationId: 1
  kafkapilot:
    application-id: stream.app.${spring.app.name}
    acks: all
    num-stream-threads: 8
  kafka:
    topics:
      myTask: test.v1


infrastructure:
  services:
    ssl:
      keyStorePath:
      keyStorePassword:
      keyPassword: