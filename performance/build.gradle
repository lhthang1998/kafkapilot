plugins {
	id 'java'
	id 'war'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'io.gatling.gradle' version '3.14.3.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'performance'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('gatlingVersion', "3.14.3")
}

dependencies {
	implementation (
			"org.yaml:snakeyaml:2.4",

			//lib-gatling

			"io.gatling:gatling-core:${gatlingVersion}",
			"io.gatling:gatling-http:${gatlingVersion}",
			"io.gatling.highcharts:gatling-charts-highcharts:${gatlingVersion}"
	)
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
}

tasks.named('test') {
	useJUnitPlatform()
}

apply plugin: 'io.gatling.gradle'


def reportDesscription = "CI Performance Testing"
def simulation = "com.example.performance.AppSimulation"

tasks.register("runLoadTest", JavaExec.class) {
	environment(Map.of("GATLING_HOME", workingDir))
	description 'PERFORMANCE TESTING'

	getMainClass().set("io.gatling.app.Gatling")

	classpath = sourceSets.test.runtimeClasspath
	systemProperties = System.getProperties() as Map<String, ?>;
	jvmArgs List.of('--add-opens', 'java.base/java.lang=ALL-UNNAMED')

	// Specify the simulation class to run
	args = ['-s', "${simulation}",
			'-rd', "${reportDesscription}",
			'-rf', "${workingDir}/build/reports/gatling"
	]
}
